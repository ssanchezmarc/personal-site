{
  "swagger": "2.0",
  "info": {
    "description": "Ecommerce Apps API",
    "version": "1.0.0",
    "title": "Ecommerce Apps API",
    "contact": { "email": "raul@rfvallina.com" },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    { "name": "admins", "description": "Secured Admin-only calls" },
    { "name": "users", "description": "Operations available to regular users" }
  ],
  "paths": {
    "/oauth/token": {
      "post": {
        "tags": ["users"],
        "summary": "Obtain an access token to use the API",
        "operationId": "token",
        "description": "Obtain an access token to use the API",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Credentials",
            "description": "User credentials",
            "schema": { "$ref": "#/definitions/CredentialsBodyParam" }
          }
        ],
        "responses": {
          "200": {
            "description": "Token successfully generated",
            "schema": { "$ref": "#/definitions/Authentication" }
          },
          "400": { "description": "invalid input, object invalid" },
          "401": { "description": "Unauthorized, invalid credentials" }
        }
      }
    },
    "/account": {
      "post": {
        "tags": ["users"],
        "summary": " Create an account in the system",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Account",
            "schema": { "$ref": "#/definitions/Account" }
          }
        ],
        "responses": {
          "201": { "description": "Account successfully created" },
          "401": { "description": "Unauthorized, invalid credentials" },
          "422": { "description": "Invalid input" }
        }
      }
    },
    "/account/{id}": {
      "put": {
        "tags": ["users"],
        "summary": "Updates account details",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Account ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "schedule",
            "schema": { "$ref": "#/definitions/AccountBodyParam" }
          }
        ],
        "responses": {
          "200": { "description": "Account successfully updated" },
          "401": { "description": "Unauthorized, invalid credentials" },
          "422": { "description": "Invalid input" }
        }
      }
    },
    "/account/inactive/{id}": {
      "post": {
        "tags": ["users"],
        "summary": "Sets an account inactive",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Account ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Account set inactive" },
          "401": { "description": "Unauthorized, invalid credentials" }
        }
      }
    },
    "/schedules": {
      "get": {
        "tags": ["users"],
        "summary": "Obtain the schedules created by this user",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "return schedules found",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Schedule" }
            }
          },
          "401": { "description": "Unauthorized, invalid credentials" }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create a new schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "schedule",
            "schema": { "$ref": "#/definitions/ScheduleBodyParam" }
          }
        ],
        "responses": {
          "201": { "description": "Schedule successfully created" },
          "401": { "description": "Unauthorized, invalid credentials" },
          "422": { "description": "Invalid input" }
        }
      }
    },
    "/schedules/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Gets the details of a schedule",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Schedule ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule successfully obtained",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "401": { "description": "Unauthorized, invalid credentials" },
          "422": { "description": "Invalid input" }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Updates a specific schedule",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Schedule ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "schedule",
            "schema": { "$ref": "#/definitions/ScheduleBodyParam" }
          }
        ],
        "responses": {
          "200": { "description": "Schedule successfully updated" },
          "401": { "description": "Unauthorized, invalid credentials" },
          "422": { "description": "Invalid input" }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Deletes a schedule completely",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Schedule ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Schedule successfully deleted" },
          "401": { "description": "Unauthorized, invalid credentials" },
          "422": { "description": "Invalid input" }
        }
      }
    },
    "/schedules/cutoff_times": {
      "get": {
        "tags": ["users"],
        "summary": "View cutoff times available to display to the user to select",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "cutoff times successfully populated",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CutoffTime" },
              "example": "[{id: 1, value: 00:15 PM}, {id: 2, value: 00:30 PM}, ...]"
            }
          }
        }
      }
    },
    "/schedules/periods": {
      "get": {
        "tags": ["users"],
        "summary": "View periods available to display to the user to select in order to bind to cutoff times",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "periods successfully populated",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Period" },
              "example": "[{id: 1, name: All days, days: [1, 2, 3, 4, 5, 6, 7]}, {id: 2, name: Mondays - Fridays, days: [1, 2, 3, 4, 5]}, ...]"
            }
          }
        }
      }
    },
    "/schedules/days": {
      "get": {
        "tags": ["users"],
        "summary": "View available days corresponding to periods",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "periods successfully populated",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Day" },
              "example": "[{id: 1, name: Monday}, {id: 2, name: Tuesday}, ...]"
            }
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": ["users"],
        "summary": "View payment data",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Payments sucessfully populated",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Payment" }
            }
          },
          "401": { "description": "Unauthorized, invalid credentials" }
        }
      }
    },
    "/generator": {
      "post": {
        "tags": ["users"],
        "summary": "Return a string containing the javascript snippet to paste on their ecommerce sites",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Javascript code generated successfully",
            "schema": { "type": "string" }
          },
          "401": { "description": "Unauthorized, invalid credentials" }
        }
      }
    }
  },
  "definitions": {
    "CredentialsBodyParam": {
      "type": "object",
      "required": ["username", "password"],
      "properties": {
        "username": { "type": "string", "example": "xxxx@gmail.com" },
        "password": { "type": "string", "example": "thisIsAPassword" }
      }
    },
    "AccountBodyParam": {
      "type": "object",
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" },
        "company": { "type": "string" },
        "website": { "type": "string" },
        "timezone": { "type": "string" },
        "paypal": { "type": "string" },
        "subscriptionPlan": { "type": "string" }
      }
    },
    "ScheduleBodyParam": {
      "type": "object",
      "required": ["name", "active", "cutoffTimes"],
      "properties": {
        "name": { "type": "string" },
        "active": { "type": "boolean" },
        "cutoffTimes": {
          "type": "array",
          "items": { "$ref": "#/definitions/CutoffTimePeriod" }
        },
        "cutoffMessage": { "type": "string" },
        "expiredMessage": { "type": "string" },
        "hoverMessage": { "type": "string" }
      }
    },
    "Authentication": {
      "type": "object",
      "required": ["access_token", "token_type", "refresh_token", "expires_in", "scope"],
      "properties": {
        "access_token": {
          "type": "string",
          "example": "6efbdd1b-6f8e-4f6b-b6f2-ca1497dd39aa"
        },
        "token_type": { "type": "string", "example": "bearer" },
        "refresh_token": {
          "type": "string",
          "example": "1bf42a1e-33d8-4a08-8cee-57b09d92c5ab"
        },
        "expires_in": { "type": "integer", "example": 172799 },
        "scope": { "type": "string", "example": "read write" }
      }
    },
    "Account": {
      "type": "object",
      "required": ["name", "email", "password"],
      "properties": {
        "name": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" },
        "company": { "type": "string" },
        "website": { "type": "string" },
        "timezone": { "type": "string" },
        "paypal": { "type": "string" },
        "subscriptionPlan": { "type": "string" },
        "ecommerce": { "type": "string" }
      }
    },
    "Schedule": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "name": { "type": "string" },
        "active": { "type": "boolean" },
        "cutoffTimes": {
          "type": "array",
          "items": { "$ref": "#/definitions/CutoffTimePeriod" }
        },
        "cutoffMessage": { "type": "string" },
        "expiredMessage": { "type": "string" },
        "hoverMessage": { "type": "string" }
      }
    },
    "CutoffTimePeriod": {
      "type": "object",
      "properties": {
        "period": { "$ref": "#/definitions/Period" },
        "cutoffTime": { "$ref": "#/definitions/CutoffTime" }
      }
    },
    "CutoffTime": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1,
          "description": "id of cutoff time in db"
        },
        "name": { "type": "string", "example": "5:30 PM" }
      }
    },
    "Period": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1,
          "description": "id of period in db"
        },
        "name": { "type": "string", "example": "Saturdays - Sundays" },
        "days": {
          "type": "array",
          "items": { "type": "integer" },
          "example": "[6, 7]"
        }
      }
    },
    "Day": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1,
          "description": "id of day in backend"
        },
        "name": { "type": "string", "example": "Monday" }
      }
    },
    "KeyValue": {
      "type": "object",
      "properties": {
        "key": { "type": "string" },
        "value": { "type": "string" }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "method": { "type": "string" },
        "date": {
          "type": "integer",
          "format": "long value in miliseconds",
          "example": 1736483899
        },
        "amount": {
          "type": "string",
          "format": "decimal value",
          "example": 45.98
        },
        "invoiceId": { "type": "string" }
      }
    }
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/rfvallina/appsEcom/1.0.0",
  "schemes": ["https"]
}
